import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Example historical weather data
data = pd.DataFrame({
    'day_of_year': range(1, 366),
    'temperature': 20 + 10 * np.sin(2 * np.pi * np.array(range(1, 366)) / 365) + np.random.rand(365) * 2
})

# Add seasonal features
data['sin_day'] = np.sin(2 * np.pi * data['day_of_year'] / 365)
data['cos_day'] = np.cos(2 * np.pi * data['day_of_year'] / 365)

# Define features and target
X = data[['sin_day', 'cos_day']]
y = data['temperature']

# Train-test split
train_size = int(len(data) * 0.8)
X_train, X_test = X[:train_size], X[train_size:]
y_train, y_test = y[:train_size], y[train_size:]

# Fit linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Evaluate predictions
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)
