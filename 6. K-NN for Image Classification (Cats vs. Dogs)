from sklearn.decomposition import PCA
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score
import numpy as np

# Example high-dimensional image data
np.random.seed(42)
image_data = np.random.rand(100, 1024)  # 100 images, each flattened to 1024 pixels
labels = np.random.choice([0, 1], size=100)  # Binary labels (cats: 0, dogs: 1)

# Dimensionality reduction with PCA
pca = PCA(n_components=50)  # Reduce to 50 components
reduced_data = pca.fit_transform(image_data)

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(reduced_data, labels, test_size=0.2, random_state=42)

# K-NN classification
knn = KNeighborsClassifier(n_neighbors=5)
knn.fit(X_train, y_train)
y_pred = knn.predict(X_test)

# Evaluate accuracy
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)
